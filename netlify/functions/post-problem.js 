// netlify/functions/post-problem.js
const { getDbClient } = require('./db-config');

exports.handler = async function(event, context) {
  if (event.httpMethod !== 'POST') {
    return {
      statusCode: 405,
      headers: { "Access-Control-Allow-Origin": "*" },
      body: JSON.stringify({ message: "Method Not Allowed" })
    };
  }

  let client;
  try {
    const data = JSON.parse(event.body);
    const { title, description, category, location, estimatedBudget, requesterId } = data;

    // Basic validation
    if (!title || !description || !category || !location || !estimatedBudget || !requesterId) {
      return {
        statusCode: 400,
        headers: { "Access-Control-Allow-Origin": "*" },
        body: JSON.stringify({ error: "Missing required fields" })
      };
    }

    client = await getDbClient();

    // SQL INSERT query. DEFAULT values for status, is_approved, created_at, quotes are handled by DB schema.
    const result = await client.query(
      `INSERT INTO problems (title, description, category, location, estimated_budget, requester_id, quotes)
       VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING *`, // RETURNING * returns the inserted row
      [title, description, category, location, estimatedBudget, requesterId, JSON.stringify([])] // Initialize quotes as empty JSON array string
    );

    return {
      statusCode: 201, // 201 Created
      headers: {
        "Content-Type": "application/json",
        "Access-Control-Allow-Origin": "*",
        "Access-Control-Allow-Methods": "GET, POST, OPTIONS",
        "Access-Control-Allow-Headers": "Content-Type, Authorization"
      },
      body: JSON.stringify(result.rows[0]) // Return the newly created problem
    };
  } catch (error) {
    console.error('Error posting problem:', error);
    return {
      statusCode: 500,
      headers: {
        "Access-Control-Allow-Origin": "*",
      },
      body: JSON.stringify({ error: 'Failed to post problem', details: error.message })
    };
  } finally {
    if (client) {
      client.release();
    }
  }
};